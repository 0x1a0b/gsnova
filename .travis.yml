sudo: required
services:
  - docker

language: go

go:
- "1.10.1"

env:
  global:
    - secure: "lr1A72WQgvfEVt+QQ58+so6J8c52hs31gHW+Ekvz+vqpQRSGEdc28y/tEZ8zPGOLGXj08FMTUXgTn8hTy/8GTHNBSqxJONmWGjkooLtaaIHTbMEsCTb95ZUm+okUlmw1NKu0MDxHi+QQomtrXxoxh2Lfiy5Owd8dORQwKd2eF6g="
    - secure: "YAsho1KEQV/OnRzjWgAOEO9Qko7JOifiy+odOXMcTiCU2Pixmjz5uRQndf82ktaI5ncRFz4fRIgRD3dBauPulAQmJo+sVljmPeV6m0L7PiqcwR0ml8E7BNe2ROm/RXJZxuGw5F0ci3wsw/UJg+3+kwtjUXQr8Bcr0y7x+XrxANw="
    - secure: "MGd/VnfZYb8F9W9BAWV0n9qoyb7h5uieQne53vw0d/uSA9OtcigZ4/YC0gJ2du+PjnqkNUV4R3WGmMNH4reU0ODs11TDzH01CYQkWCwKwz79tLFs1/tvv0CxbFMeluBDwxc8TGEXLsz6GqIiyBxPCjrjhC7oW5scvIANg0WMlBM="

install:
- go get github.com/tools/godep
- go get github.com/clipperhouse/{linkedlist,set,slice,stringer,typewriter}
- go get github.com/bifurcation/mint
- go get github.com/cheekybits/genny/generic
- go get -t github.com/yinqiwen/gsnova
script:
- godep save && tar cf tmp-deploy.tar Godeps vendor local common remote main.go  server.json && tar uf tmp-deploy.tar -C remote Procfile manifest.yml && cp remote/Procfile ./ && bzip2 tmp-deploy.tar && mv tmp-deploy.tar.bz2 gsnova-paas-deploy-with-dependencies-${TRAVIS_TAG}.tar.bz2
- export CGO_ENABLED=0
- GOOS=windows GOARCH=386 go build -o gsnova.exe github.com/yinqiwen/gsnova
- tar cjf gsnova_windows_386-${TRAVIS_TAG}.tar.bz2 client.json server.json hosts.json cnipset.txt gsnova.exe
- GOOS=windows GOARCH=amd64 go build -o gsnova.exe github.com/yinqiwen/gsnova
- tar cjf gsnova_windows_amd64-${TRAVIS_TAG}.tar.bz2 client.json server.json hosts.json cnipset.txt gsnova.exe
- GOOS=linux GOARCH=386 go build  github.com/yinqiwen/gsnova
- tar cjf gsnova_linux_386-${TRAVIS_TAG}.tar.bz2 client.json server.json hosts.json cnipset.txt gsnova
- GOOS=linux GOARCH=amd64 go build github.com/yinqiwen/gsnova
- tar cjf gsnova_linux_amd64-${TRAVIS_TAG}.tar.bz2 client.json server.json hosts.json cnipset.txt gsnova
- GOOS=linux GOARCH=arm GOARM=5 go build github.com/yinqiwen/gsnova
- tar cjf gsnova_linux_armv5-${TRAVIS_TAG}.tar.bz2 client.json server.json hosts.json cnipset.txt gsnova
- GOOS=linux GOARCH=arm GOARM=6 go build  github.com/yinqiwen/gsnova
- tar cjf gsnova_linux_armv6-${TRAVIS_TAG}.tar.bz2 client.json server.json hosts.json cnipset.txt gsnova
- GOOS=linux GOARCH=arm GOARM=7 go build  github.com/yinqiwen/gsnova
- tar cjf gsnova_linux_armv7-${TRAVIS_TAG}.tar.bz2 client.json server.json hosts.json cnipset.txt gsnova
- GOOS=linux GOARCH=arm64  go build  github.com/yinqiwen/gsnova
- tar cjf gsnova_linux_arm64-${TRAVIS_TAG}.tar.bz2 client.json server.json hosts.json cnipset.txt gsnova
- GOOS=linux GOARCH=mipsle  go build  github.com/yinqiwen/gsnova
- tar cjf gsnova_linux_mipsle-${TRAVIS_TAG}.tar.bz2 client.json server.json hosts.json cnipset.txt gsnova
- GOOS=linux GOARCH=mips  go build  github.com/yinqiwen/gsnova
- tar cjf gsnova_linux_mips-${TRAVIS_TAG}.tar.bz2 client.json server.json hosts.json cnipset.txt gsnova
- GOOS=darwin GOARCH=amd64 go build  github.com/yinqiwen/gsnova
- tar cjf gsnova_macos_amd64-${TRAVIS_TAG}.tar.bz2 client.json server.json hosts.json cnipset.txt gsnova


deploy:
  - provider: releases
    api_key:
      secure: YngDT2JlydCG+qb8Ww9wBFyWiLRQJczybNLeoFKluBXKoh1Vu+TZeReMK+rRUjOqOmYV8sNtOnEVSg4+ICeYDNp9fRRwcNKTkp0H+8pH0OynxdH2faCjx1H5U0WQuWqMLQoMSHZ90I0tL40kEJOChLY6WGvwY47YBqi/dsvmTfg=
    file: 
      - "gsnova-paas-deploy-with-dependencies-${TRAVIS_TAG}.tar.bz2"
      - "gsnova_windows_386-${TRAVIS_TAG}.tar.bz2"
      - "gsnova_windows_amd64-${TRAVIS_TAG}.tar.bz2"
      - "gsnova_linux_386-${TRAVIS_TAG}.tar.bz2"
      - "gsnova_linux_amd64-${TRAVIS_TAG}.tar.bz2"
      - "gsnova_linux_armv5-${TRAVIS_TAG}.tar.bz2"
      - "gsnova_linux_armv6-${TRAVIS_TAG}.tar.bz2"
      - "gsnova_linux_armv7-${TRAVIS_TAG}.tar.bz2"
      - "gsnova_linux_arm64-${TRAVIS_TAG}.tar.bz2"
      - "gsnova_linux_mips-${TRAVIS_TAG}.tar.bz2"
      - "gsnova_linux_mipsle-${TRAVIS_TAG}.tar.bz2"
      - "gsnova_macos_amd64-${TRAVIS_TAG}.tar.bz2"
    skip_cleanup: true
    overwrite: true
    on:
      tags: true
      repo: yinqiwen/gsnova
  - provider: script
    script: 
    - curl -O -L https://github.com/grammarly/rocker/releases/download/1.3.1/rocker-1.3.1-linux_amd64.tar.gz
    - tar zxf rocker-1.3.1-linux_amd64.tar.gz
    - ./rocker build -f Docker/server/Rockerfile --auth $DOCKER_USER:$DOCKER_PASS --push -var Version=${TRAVIS_TAG}
    skip_cleanup: true
    on:
      tags: true
  - provider: heroku
    api_key:
      secure: "PsICvdYk4eDTxFyS1j/DPAF6H7GCsNpkWcZHyFBROh60gxXGU+XHdUTQrrFHSPzLi6b8mDe4NOCtdrfA1xuluv6IbdbGQB+gM2lvRKse9x8sojh57rqvVAcaeCc/NsY7W/eAnk8Rd8TcW5nqrEg3qpUbl/Vio74ZQW/ZY+P0ZaQ="
    app: $HEROKU_APP
    skip_cleanup: true
    on:
      tags: true
      condition: $TRAVIS_TAG = 'latest'
       

